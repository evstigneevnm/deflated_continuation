{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"c",
				"continuation_type"
			],
			[
				"lambda",
				"lambda0"
			],
			[
				"ds_fa",
				"ds_factor_m"
			],
			[
				"con",
				"continuation_type_"
			],
			[
				"continua",
				"continuation_type"
			],
			[
				"circle",
				"circle_t"
			],
			[
				"create_sol",
				"create_solver_"
			],
			[
				"retu",
				"return_code"
			],
			[
				"upl",
				"upload_solution"
			],
			[
				"nnz_",
				"nnz_blocks_"
			],
			[
				"nnz_bl",
				"nnz_blocks"
			],
			[
				"resid_",
				"resid_val"
			],
			[
				"IA",
				"IA_d"
			],
			[
				"J",
				"JA_d"
			],
			[
				"bl",
				"Block_Size"
			],
			[
				"spa",
				"sparse_matrix_p"
			],
			[
				"B",
				"Block_Size"
			],
			[
				"free_",
				"free_C_array"
			],
			[
				"R",
				"R"
			],
			[
				"use_",
				"use_precond_resid"
			],
			[
				"vec",
				"vector_type"
			],
			[
				"te",
				"temp_vec"
			],
			[
				"ex",
				"extrapolate_quadratic_kernel"
			],
			[
				"mat",
				"matrix_t"
			],
			[
				"Ld",
				"Ld"
			],
			[
				"le",
				"le"
			],
			[
				"loca",
				"location"
			],
			[
				"ma",
				"matrix_t"
			],
			[
				"t",
				"tp\ttemplate <typename ${1:_InputIter}>"
			],
			[
				"H",
				"h"
			],
			[
				"allo",
				"allocator_gpu"
			],
			[
				"allocator_",
				"allocator_cpu"
			],
			[
				"T",
				"T_vec"
			],
			[
				"all",
				"allocator_"
			],
			[
				"x_",
				"x_s"
			],
			[
				"nor",
				"norm_wight"
			],
			[
				"ins",
				"instantanious_vector"
			],
			[
				"MPI_",
				"MPI_type_hlp"
			],
			[
				"tole",
				"tolerance"
			],
			[
				"x_ins",
				"x_inst_sum"
			],
			[
				"tot",
				"total_time"
			],
			[
				"total_",
				"total_time"
			],
			[
				"BC",
				"BC_CPU"
			],
			[
				"sigma",
				"sigma_value_CPU"
			],
			[
				"sig",
				"sigma_value_CPU"
			],
			[
				"siga",
				"sigma_value_GPU"
			],
			[
				"sigm",
				"sigma_value_CPU"
			],
			[
				"si",
				"sigma_value_CPU"
			],
			[
				"k",
				"k"
			],
			[
				"lamb",
				"lambda1_l"
			],
			[
				"conv",
				"converged_l"
			],
			[
				"bes",
				"best_solution"
			],
			[
				"use",
				"use_small_alpha"
			],
			[
				"ver",
				"verbose"
			],
			[
				"u_he",
				"u_helper_out"
			],
			[
				"vec_",
				"vec_ops_R_im"
			],
			[
				"set_",
				"set_linearization_point"
			],
			[
				"cubla",
				"CUBLAS"
			],
			[
				"sol_st",
				"sol_storage_obj"
			],
			[
				"la",
				"lambda0_s"
			],
			[
				"lin_",
				"lin_solv_"
			],
			[
				"Lin",
				"LinearSystemSolver"
			],
			[
				"lin",
				"lin_solv_"
			],
			[
				"new",
				"newton_def"
			],
			[
				"sys",
				"system_operator_cont_t"
			],
			[
				"system_oper",
				"system_operator_def"
			],
			[
				"pred",
				"predictor"
			],
			[
				"net",
				"newton"
			],
			[
				"attem",
				"attempts_0"
			],
			[
				"atte",
				"attempts_0"
			],
			[
				"att",
				"attempts_0"
			],
			[
				"ste",
				"step_ds"
			],
			[
				"st",
				"step_ds"
			],
			[
				"fou",
				"found_solution"
			],
			[
				"u_o",
				"u_out_1"
			],
			[
				"ret",
				"retries"
			],
			[
				"delete",
				"delete"
			],
			[
				"linear",
				"linear_solver"
			],
			[
				"vec_op",
				"vec_ops_real_im"
			],
			[
				"max",
				"maximum_iterations"
			],
			[
				"laplace",
				"Laplace"
			],
			[
				"BL",
				"BLOCK_SIZE_y"
			],
			[
				"Vec",
				"VectorOperations_RC_reduced"
			],
			[
				"VectorOperatio",
				"VectorOperations_R"
			],
			[
				"norm",
				"norm_weight"
			],
			[
				"de",
				"delta_x"
			],
			[
				"dista",
				"distance_der"
			],
			[
				"di",
				"distance_help"
			],
			[
				"soluton",
				"solution_storage"
			],
			[
				"ini",
				"init_vector"
			],
			[
				"FFT",
				"FFT_type"
			],
			[
				"free",
				"free_vector"
			],
			[
				"vec_ops",
				"vec_ops_C"
			],
			[
				"grad",
				"grad_x"
			],
			[
				"thru",
				"thrust_complex"
			],
			[
				"thr",
				"thrust_complex"
			],
			[
				"dev",
				"device_allocate"
			],
			[
				"vect",
				"vector_type"
			],
			[
				"vec_ops_R",
				"vec_ops_R"
			],
			[
				"tr",
				"thrust_complex_type"
			],
			[
				"com",
				"thrust_complex_type"
			],
			[
				"ve",
				"vector_size"
			],
			[
				"scala",
				"scalar_type"
			],
			[
				"res",
				"result"
			],
			[
				"CUB",
				"CUBLAS_SAFE_CALL"
			],
			[
				"CUBLA",
				"CUBLAS_SAFE_CALL"
			],
			[
				"handle",
				"handle_created"
			],
			[
				"CUBL",
				"CUBLAS_SAFE_CALL"
			],
			[
				"d",
				"def\t#ifndef … #define … #endif"
			],
			[
				"sca",
				"scalar_type"
			],
			[
				"resu",
				"result_d"
			],
			[
				"dimGr",
				"dimGrid"
			],
			[
				"gra",
				"gradient_y"
			],
			[
				"AR",
				"AR"
			],
			[
				"u_",
				"u_hat_d"
			],
			[
				"u_d",
				"u_d"
			],
			[
				"r_d",
				"r_d"
			],
			[
				"N_",
				"N_reduced"
			],
			[
				"cy",
				"cyramics_main"
			],
			[
				"me",
				"metall_flanges"
			],
			[
				"rot",
				"rot_x"
			],
			[
				"cont",
				"control_file_2_read"
			],
			[
				"class",
				"class\tclass-..-(class)"
			],
			[
				"MV_d_",
				"MV_d_recv"
			],
			[
				"Tot",
				"TotalTime"
			],
			[
				"real",
				"real"
			],
			[
				"j",
				"j"
			],
			[
				"curren",
				"current_process"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 97.0,
		"last_filter": "Install Package",
		"selected_items":
		[
			[
				"Install Package",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"su",
				"Preferences: SublimeCodeIntel Settings – User"
			],
			[
				"intel",
				"Plugin Development: Convert Syntax to .sublime-syntax"
			]
		],
		"width": 524.0
	},
	"console":
	{
		"height": 179.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"mport urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/noctum/Documents/Continuation/Linsolver_test/source/continuation/predictor_adaptive.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/continuation/solution_point.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/continuation/advance_solution.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/continuation/system_operator_continuation.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/test_deflation_continuation.cpp",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/circle_test_deflation_continuation.cpp",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/gpu_vector_operations.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/continuation/initial_tangent.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/test_deflation_continuation_typedefs.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/continuation/convergence_strategy.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/results_make.txt",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/deflation/convergence_strategy.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/gpu_file_operations.h",
		"/home/noctum/.config/sublime-text-3/Packages/SublimeCodeIntel/SublimeCodeIntel.sublime-settings",
		"/home/noctum/Documents/Continuation/Linsolver_test/diagram.dat",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/nonlinear_operators/circle/convergence_strategy.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/numerical_algos/newton_solvers/newton_solver_extended.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/deflation/deflation_operator.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/deflation/solution_storage.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/Makefile",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/nonlinear_operators/circle/linear_operator_circle.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/numerical_algos/lin_solvers/iter_solver_base.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/numerical_algos/lin_solvers/cgs.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/utils/cuda_support.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/nonlinear_operators/circle/circle.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/nonlinear_operators/circle/circle_ker.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/nonlinear_operators/circle/circle_ker.cu",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/circle_test_deflation_continuation_typedefs.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/numerical_algos/lin_solvers/bicgstabl.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/cpu_vector_operations.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/nonlinear_operators/Kuramoto_Sivashinskiy_2D/Kuramoto_Sivashinskiy_2D.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/nonlinear_operators/Kuramoto_Sivashinskiy_2D/Kuramoto_Sivashinskiy_2D_ker.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/nonlinear_operators/Kuramoto_Sivashinskiy_2D/Kuramoto_Sivashinskiy_2D_ker.cu",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/test_deflation.cpp",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/test_deflation_typedefs.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/nonlinear_operators/circle/preconditioner_circle.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/test_vector_operations.cpp",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/nonlinear_operators/Kuramoto_Sivashinskiy_2D/convergence_strategy.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/macros.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/utils/log.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/SM_test.cpp",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/numerical_algos/lin_solvers/default_monitor.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/nonlinear_operators/Kuramoto_Sivashinskiy_2D.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/nonlinear_operators/system_operator.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/nonlinear_operators/linear_operator_KS_2D.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/nonlinear_operators/convergence_strategy.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/numerical_algos/lin_solvers/sherman_morrison_linear_system_solve.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/numerical_algos/newton_solvers/newton_solver.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/gpu_vector_operations_impl.cuh",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/gpu_vector_operations_kernels.cu",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/test_inst/solution_container_gpu/test_container.cu",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/continuation/solutions_storage_table.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/test_inst/solution_container_gpu/Makefile",
		"/home/noctum/DATA_4TB/shared/Papers/2020PAVT_CUDA_TM/Data/flops_table.txt",
		"/home/noctum/Documents/NS3D_periodic/Source/file_operations.cu",
		"/home/noctum/Documents/openCL/test1.cl",
		"/home/noctum/DATA_4TB/nevstigneev/NS3DMPI/190509/Source/IO_operations.c",
		"/home/noctum/Documents/Continuation/Linsolver_test/u_out_0.dat",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/test_Kuramoto_Sivashinskiy_2D_RHS.cpp",
		"/home/noctum/.cache/.fr-5E0vrm/dolfyn.f90",
		"/home/noctum/.cache/.fr-exTFaT/lapacks.f",
		"/home/noctum/.cache/.fr-nTw8gY/smagorinsky.f90",
		"/home/noctum/.cache/.fr-2ZIenx/Makefile",
		"/home/noctum/.cache/.fr-9mmMGK/solver_hypre.f90",
		"/home/noctum/.cache/.fr-CEYJgg/compile.bat",
		"/home/noctum/.cache/.fr-lNjMj0/saverestart.f90",
		"/home/noctum/.cache/.fr-Wp0RmF/gradients.f90",
		"/home/noctum/Documents/LBM_D3Q19_mGPU/Source/stream_mpi.h",
		"/home/noctum/Documents/LBM_D3Q19_mGPU/Source/stream_mpi.cu",
		"/home/noctum/Documents/LBM_D3Q19_mGPU/Source/stream.h",
		"/home/noctum/Documents/LBM_D3Q19_mGPU/Source/stream.cu",
		"/home/noctum/Documents/LBM_D3Q19_mGPU/Source/single_step.h",
		"/home/noctum/Documents/LBM_D3Q19_mGPU/Source/single_step.cu",
		"/home/noctum/Documents/LBM_D3Q19_mGPU/Source/read_boost_pt.h",
		"/home/noctum/Documents/LBM_D3Q19_mGPU/Source/read_boost_pt.cpp",
		"/home/noctum/Documents/LBM_D3Q19_mGPU/Source/min_max_reduction.h",
		"/home/noctum/Documents/LBM_D3Q19_mGPU/Source/min_max_reduction.cu",
		"/home/noctum/Documents/LBM_D3Q19_mGPU/Source/map.h",
		"/home/noctum/Documents/LBM_D3Q19_mGPU/Source/map.cu",
		"/home/noctum/Documents/LBM_D3Q19_mGPU/Source/Macro.h",
		"/home/noctum/Documents/LBM_D3Q19_mGPU/Source/LBM_D3Q19.cu",
		"/home/noctum/Documents/LBM_D3Q19_mGPU/Source/IO_operations.cpp",
		"/home/noctum/Documents/LBM_D3Q19_mGPU/Source/initial_conditions.cpp",
		"/home/noctum/Documents/LBM_D3Q19_mGPU/Source/cuda_support.h",
		"/home/noctum/Documents/LBM_D3Q19_mGPU/Source/cuda_support.cu",
		"/home/noctum/Documents/LBM_D3Q19_mGPU/Source/cuda_safe_call.h",
		"/home/noctum/Documents/LBM_D3Q19_mGPU/Source/collide.h",
		"/home/noctum/Documents/LBM_D3Q19_mGPU/Source/collide.cu",
		"/home/noctum/Documents/AMGX_test/result_make.txt",
		"/home/noctum/Documents/AMGX_test/HPC_global_config.h",
		"/media/DATA/shared/AmgX/examples/amgx_mpi_capi.c",
		"/media/DATA/shared/Tests/test_mat_apply/src/common/numerical_algos/matrices/brs_matrix_structure.h",
		"/media/DATA/shared/Tests/test_mat_apply/src/common/numerical_algos/matrices/brs_matrix_impl.h",
		"/home/noctum/Desktop/mon_net",
		"/media/DATA/shared/Tests/test_mat_apply/src/common/numerical_algos/matrices/brs_matrix.h",
		"/media/DATA/shared/AmgX/examples/amgx_mpi_capi_cla.c",
		"/home/noctum/Documents/AMGX_test/amgx_wrap_resources.h",
		"/home/noctum/Documents/AMGX_test/test1.cpp",
		"/home/noctum/Documents/AMGX_test/amgx_wrap_solver.h",
		"/home/noctum/Documents/AMGX_test/equaitons_general.h",
		"/home/noctum/Documents/AMGX_test/advect_diff_eq2.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/external_libraries/cublas_wrap.h",
		"/media/DATA/shared/AmgX/core/configs/FGMRES_AGGREGATION_DILU.json",
		"/home/noctum/DATA_4TB/shared/Papers/2020PAVT_CUDA_TM/reduce_by_key_timings.txt",
		"/home/noctum/DATA2_4TB/nevstigneev/Bineuro/Kursor/EEGlearning/learning.m",
		"/home/noctum/Documents/NS3D_P_p_Eigs/Source/NS3D_periodic.cu",
		"/home/noctum/Documents/NS3D_P_p_Eigs/Source/Jacobian.cu",
		"/home/noctum/Documents/NS3D_P_p_Eigs/Source/diffusion.cu",
		"/home/noctum/Documents/NS3D_P_p_Eigs/Source/RK_time_step.cu",
		"/home/noctum/Documents/NS3D_P_p_Eigs/Source/Arnoldi/BiCGStabL.cu",
		"/media/DATA/shared/Tests/test_mat_apply/src/test_apply_single_gpu.cu",
		"/media/DATA/shared/AmgX/base/include/amgx_c.h",
		"/home/noctum/Documents/AMGX_test/matrix/sparse_matrix.h",
		"/home/noctum/Documents/AMGX_test/matrix/row.h",
		"/home/noctum/Documents/AMGX_test/matrix/block.h",
		"/home/noctum/DATA_4TB/nevstigneev/RBConvection/sample_19_6.cu",
		"/media/DATA/shared/AmgX/test_exec.txt",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/utils/boost_property_tree_fwd.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/utils/constant_data.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/utils/cuda_ownutils.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/utils/log_mpi.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/utils/main_try_catch_macro.h",
		"/home/noctum/Documents/Continuation/Linsolver_test/source/utils/mpi_timer_event.h",
		"/media/DATA/shared/AmgX/base/include/vector_thrust_allocator.h",
		"/media/DATA/shared/AmgX/base/include/vector.h",
		"/media/DATA/shared/AmgX/base/include/resources.h",
		"/media/DATA/shared/AmgX/base/include/amg_eigensolver.h",
		"/media/DATA/shared/AmgX/base/include/amgx_config.h"
	],
	"find":
	{
		"height": 33.0
	},
	"find_in_files":
	{
		"height": 114.0,
		"where_history":
		[
			"/home/noctum/Downloads/magma-2.3.0",
			"/home/noctum/Downloads/magma-2.3.0/magmablas",
			"/home/noctum/Downloads/magma-2.3.0/src",
			"/home/noctum/Downloads/magma-2.3.0/magmablas",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"error",
			"lambda1_l",
			"step_ds",
			"predic",
			"step_ds",
			"dir",
			"/*",
			"adva",
			"norm_wight",
			"sz",
			"continuation_type",
			"x1_p",
			"error",
			"predic",
			"ds_l",
			"x_0",
			"error",
			"continuation_step",
			"set_resid_recalc_freq",
			"set_use_precond_resid",
			"basis_sz",
			"bicg",
			"real_im_vec",
			"_im",
			"real_im_vec",
			"vec_ops_R_im",
			"norm_wight",
			"solution_point",
			"linear_operator_KS_2D",
			"preconditioner_KS_2D",
			"init_all_derivatives",
			"common_constructor_operation",
			"1",
			"common_constructor_operation",
			"init",
			"conv_newton",
			"convergence_newton_t",
			"conver",
			"norm",
			"size_problem",
			"O/Kuramoto_Sivashinskiy_2D",
			"Kuramoto_Sivashinskiy",
			"step_ds",
			"norm_wight",
			"update_tangent_space",
			"error",
			"size_problem",
			"norm_wight",
			"norm",
			"newton_def_tol",
			"convergence_newton_def_t",
			"convergence_strategy",
			"sol_storage_def_t",
			"newton_cont_tol",
			"newton_def_tol",
			"lin_solver_max_it",
			"lin_solver_tol",
			"norm_wight",
			"init",
			"norm",
			"lin_solver_tol",
			"norm_wight",
			"size_problem",
			"norm_weight",
			"norm_wight",
			"tolerance",
			"normFx",
			"size_problem",
			"lin_solver_tol",
			"norm_wight",
			"newton_cont_tol",
			"tolerance",
			"system_operator",
			"set_linearization_point",
			"#",
			"continuation_step",
			"1",
			"set_value_at_point",
			"gpu_vector_operations",
			"sol_storage_def",
			"sol_storage_def_t",
			"Rhie",
			"1.0/36.0",
			"1.0/18.0",
			"1.0/3.0",
			"1.0+",
			"4.5*",
			"3.0*",
			"1.5*",
			"1.0-",
			"1.0/36.0",
			"1.0/18.0",
			"1.0/3.0",
			"Jacobian_per_Raw_device",
			"build_Jacobian",
			"BRS_MATRIX_MAX_BLOCKDIM",
			"free_CUDA_arrays",
			"error",
			"constructor_common",
			"create_solver",
			"status_x",
			"solver_x",
			"cfg",
			"amgx_mpi_comm_p",
			"AMGX_config_create_from_file",
			"mode_x",
			"AMGX_Mode",
			"AMGX_Mod",
			"AMGX_Mode",
			"set_amgx_mode",
			"device_vector_alloc",
			"assign",
			"AMGX_print_callback",
			"print_callback",
			"error",
			"logged_obj_t",
			"log_type",
			"logged_obj_base",
			"logged_obj_t",
			"error",
			"T",
			"log",
			"print_callback",
			"device_number",
			"amgx_mpi_comm",
			"info",
			"print_callback",
			"amgx_mpi_comm"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"vec_ops_R",
			"linear_operator_circle",
			"preconditioner_circle",
			"O",
			"Kuramoto_Sivashinskiy_2D/Kuramoto_Sivashinskiy",
			"1.0f/36.0f",
			"1.0f/18.0f",
			"1.0f/3.0f",
			"1.0f+",
			"4.5f*",
			"3.0f*",
			"1.5f*",
			"1.0f-",
			"1.0f/36.0f",
			"1.0f/18.0f",
			"1.0f/3.0f",
			"advect_diff_eq3",
			"",
			"eg_t::b_h",
			"eg_t::x_h",
			"block_size2",
			"adv_eq_t2",
			"T(ccc)/dh",
			" T(ccc)/dh",
			"copy_2_CUDA_arrays",
			"Block_Size",
			"Size",
			"-DSCALAR_TYPE=${REAL_TYPE}",
			"quadratic_interface",
			"quadratic_interface_t",
			"quadratic_adaptive_interface",
			"vec",
			"matrix_mult_vector",
			"matrix_multector",
			"T*",
			"",
			"col",
			"row",
			"'H'",
			"'D'",
			"simple_matrices",
			"extrapolate_quadratic",
			"extrapolate_linear",
			"real",
			"-g",
			"",
			"prec=17",
			"sponge",
			"Nx",
			"real",
			"-O3",
			"Logging",
			"NonlinearOperator",
			"VectorOperations",
			"deflation",
			"orthogonal_projection",
			"lambda0",
			"advance_solution",
			"VectorOperations",
			"newton_solver",
			"nonlinear_operator",
			"I2(j,k,My)",
			"type",
			"double",
			"fft_t",
			"u_helper_out",
			"u_helper_in",
			"vec_ops_R_im",
			"nullptr",
			"__global__",
			"__host__ __global__",
			"complex",
			"own_solution_vector",
			"thrust::complex<float> ",
			"thrust::complex<double> ",
			"complex",
			"template<> inline",
			"cublas_complex_types::cublas_cuComplex_type_hlp",
			"cublas_cuComplex_type_hlp",
			"double",
			"thrust::complex<float>",
			"thrust::complex<double>",
			"thrust::complex<float>",
			"double",
			"e>*& ",
			"t>*& ",
			"e*& ",
			"t*& ",
			"T*& ",
			"double",
			"thrust::complex<float>",
			"double",
			"thrust::complex<float>",
			"double",
			"sz",
			"sz_",
			"sum_abs_elements",
			"_cufftGetErrorEnum",
			"case CUBLAS_",
			"gpu_vector_operations",
			"I2(j,k,Nx)",
			"biharmonic",
			"A_hat_reduced_d",
			"cufft_wrap_R2C",
			"cufft",
			"init_cuda",
			"bin",
			"get_errorG",
			"get_residualG",
			"insulator_3",
			"insulator_2",
			"insulator_1",
			"real",
			"&",
			".sync_2_host();",
			".sync_2_device();",
			"release()",
			"Source_1",
			"Source",
			"dest",
			"[",
			" MV_d_source.d",
			" = MV_d_source.d",
			"[kk]",
			" = MV_d_source.d",
			"= MV_d_send.d",
			"",
			"NV.uz["
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": false,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 33.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "advance_solution.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"BLK_K"
			]
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 312.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
